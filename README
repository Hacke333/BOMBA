DOSYA ISIMLERI BELIRTILEN SEKILDE OLAMLIDIR ORNEK : C01/EX00/(ft_swap icin gereken dosyalar)
BU ALISTIRMALARIN 2 (IKI) (TWO) (ZWEI)(اثنين) AY SURESI VARDIR VE BEN BIR DUYURU YAPMADIKCA SURE UZAMAYACAKTIR. SURE ESNETILMEZ.
EGER KODUNUZ NORMINETTEDEN GECMIYORSA (1 hata verebilir o haric) LUTFEN KODUNUZU DUZENLEYINIZ

C00 :

EX00:
• Artan düzende listelenen 00 ile 99 arasındaki iki basamağın, tüm farklı kombinasyonlarını ekrana yazdıran bir fonksiyon yazınız.
• İstenilen çıktı aşağıdaki gibidir :
$>./a.out | cat -e
00 01, 00 02, 00 03, 00 04, 00 05, ..., 00 99, 01 02, ..., 97 99, 98 99$>
• Protip şu şekilde olmalıdır :
void ft_print_comb2(void);
IZIN VERILEN FONKSIYONLAR -> write

EX01:
• Parametre olarak girilen sayıyı ekrana yazıdıran bir fonksiyon yazınız. Yazdığnız
fonksiyon int tipindeki tüm sayı değerlerini yazdırabilmelidir.
• Protip şu şekilde olmalıdır :
void ft_putnbr(int nb);
• Örneğin:
◦ ft_putnbr(42) , "42" ’i gösterir
IZIN VERILEN FONKSIYONLAR -> write

EX02:
• n’e kadar olan tüm sayıların olası bütün kombinasyonlarını artan düzende ekrana
yazdıran bir fonksiyon yazınız.
• n şu şekilde olacaktır : 0 < n < 10.
• Eğer n = 2 ise, beklenen çıktı şu şekilde olacaktır :
$>./a.out | cat -e
01, 02, 03, ..., 09, 12, ..., 79, 89$>
• Protip şu şekilde olmalıdır :
void ft_print_combn(int n);
IZIN VERILEN FONKSIYONLAR -> write

C01:

EX00:
• Adresleri parametre olarak girilmiş iki tam sayının değerini değiştiren bir fonsksiyon
oluşturunuz.
• Prototip şu şekilde olmalıdır :
void ft_swap(int *a, int *b);
IZIN VERILEN FONKSIYONLAR -> YOK

EX01:
• Prototipi şu şekilde olan bir ft_div_mod fonsksiyonu oluşturunuz :
void ft_div_mod(int a, int b, int *div, int *mod);
• Bu fonksiyon a parametresini b parametresine böler ve bölümün sonucu div ile
belirtilen tam sayıda saklar. Aynı zamanda a ’nın b ’ye bölümünden kalanı mod ile
belirtilen tam sayıda saklar
IZIN VERILEN FONKSIYONLAR -> YOK

EX02:
• Prototipi şu şekilde olan bir ft_ultimate_div_mod fonksiyonu oluşturunuz :
void ft_ultimate_div_mod(int *a, int *b);
• Bu fonksiyon a parametresini b parametresine böler. Bölme işleminin sonucu a ile
belirtilen tam sayıda saklanır. Bölümün kalanı b ile belirtilen tam sayıda saklanır.
IZIN VERILEN FONKSIYONLAR -> YOK

EX03:
• Standart çıktıya(STDOUT) karakter dizisi yazan bir fonksiyon oluşturunuz.
• Prototip şu şekilde olmalıdır :
void ft_putstr(char *str);
IZIN VERILEN FONKSIYONLAR -> write

EX04:
• Bir karakter dizisindeki elemanları sayan ve bu sayıyı döndüren bir fonksiyon oluşturunuz.
• Prototip şu şekilde olmalıdır :
int ft_strlen(char *str);
IZIN VERILEN FONKSIYONLAR -> YOK

EX05:
• Bir tam sayı dizisinin sırasını tersine döndüren bir fonksiyon yazınız (ilk olan sona
gelecek şekilde, vb).
• Parametreler bir tam sayı işaretçisi ve tam sayı dizisinin uzunluğudur.
• Prototip şu şekilde olmalıdır :
void ft_rev_int_tab(int *tab, int size);
IZIN VERILEN FONKSIYONLAR -> YOK

EX06:
• Bir tam sayı dizisini küçükten büyüğe artan şekilde sıralayan bir fonksiyon oluşturunuz.
• Parametreler bir tam sayı işaretçisi ve tam sayı dizisinin uzunluğudur.
• Prototip şu şekilde olmalıdır :
void ft_sort_int_tab(int *tab, int size);
IZIN VERILEN FONKSIYONLAR -> YOK

C02:

EX00:
• strcpy fonksiyonun davranışını yeniden üret (man strcpy (terminale yazacan he)).
• Prototip şu şekilde olmalıdır :
char *ft_strcpy(char *dest, char *src);
IZIN VERILEN FONKSIYONLAR -> YOK

EX01:
• strncpy fonksiyonun davranışını yeniden üret (man strncpy (yine terminale yazacan he)).
• Prototip şu şekilde olmalıdır :
char *ft_strncpy(char *dest, char *src, unsigned int n);
IZIN VERILEN FONKSIYONLAR -> YOK

EX02:
• Parametre olarak verilen dizin sadece alfabetik karakterler içeriyorsa 1, herhangi
başka bir karakter içeriyorsa 0 sonucunu veren bir fonksiyon oluşturunuz.
• Prototip şu şekilde olmalıdır :
int ft_str_is_alpha(char *str);
• Eğer str boşsa 1 sonucunu vermelidir